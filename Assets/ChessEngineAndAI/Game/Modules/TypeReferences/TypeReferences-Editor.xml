<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TypeReferences-Editor</name>
    </assembly>
    <members>
        <member name="T:TypeReferences.Editor.ClassTypeReferenceEditorSettings">
            <summary>
            A public static class that provides an easy way for programs to modify included assemblies in 'type references'.
            </summary>
            Author: Mathew Aloisio
        </member>
        <member name="P:TypeReferences.Editor.ClassTypeReferenceEditorSettings.IncludeExecutingAssembly">
            <summary>Should the executing assembly be included in the class type reference assembly registration?</summary>
        </member>
        <member name="T:TypeReferences.Editor.ClassTypeReferencePropertyDrawer">
            <summary>
            Custom property drawer for <see cref="T:TypeReferences.ClassTypeReference"/> properties.
            </summary>
        </member>
        <member name="P:TypeReferences.Editor.ClassTypeReferencePropertyDrawer.ExcludedTypeCollectionGetter">
            <summary>
            Gets or sets a function that returns a collection of types that are
            to be excluded from drop-down. A value of <c>null</c> specifies that
            no types are to be excluded.
            </summary>
            <remarks>
            <para>This property must be set immediately before presenting a class
            type reference property field using <see cref="M:UnityEditor.EditorGUI.PropertyField(UnityEngine.Rect,UnityEditor.SerializedProperty)"/>
            or <see cref="M:UnityEditor.EditorGUILayout.PropertyField(UnityEditor.SerializedProperty,UnityEngine.GUILayoutOption[])"/> since the value of this
            property is reset to <c>null</c> each time the control is drawn.</para>
            <para>Since filtering makes extensive use of <see cref="M:System.Collections.Generic.ICollection`1.Contains(`0)"/>
            it is recommended to use a collection that is optimized for fast
            lookups such as <see cref="T:System.Collections.Generic.HashSet`1"/> for better performance.</para>
            </remarks>
            <example>
            <para>Exclude a specific type from being selected:</para>
            <code language="csharp"><![CDATA[
            private SerializedProperty _someClassTypeReferenceProperty;
            
            public override void OnInspectorGUI() {
                serializedObject.Update();
            
                ClassTypeReferencePropertyDrawer.ExcludedTypeCollectionGetter = GetExcludedTypeCollection;
                EditorGUILayout.PropertyField(_someClassTypeReferenceProperty);
            
                serializedObject.ApplyModifiedProperties();
            }
            
            private ICollection<Type> GetExcludedTypeCollection() {
                var set = new HashSet<Type>();
                set.Add(typeof(SpecialClassToHideInDropdown));
                return set;
            }
            ]]></code>
            </example>
        </member>
    </members>
</doc>
